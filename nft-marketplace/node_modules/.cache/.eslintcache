[{"C:\\a\\nft-marketplace\\src\\index.js":"1","C:\\a\\nft-marketplace\\src\\App.js":"2","C:\\a\\nft-marketplace\\src\\store\\MarketplaceProvider.js":"3","C:\\a\\nft-marketplace\\src\\store\\Web3Provider.js":"4","C:\\a\\nft-marketplace\\src\\store\\CollectionProvider.js":"5","C:\\a\\nft-marketplace\\src\\store\\web3-context.js":"6","C:\\a\\nft-marketplace\\src\\store\\collection-context.js":"7","C:\\a\\nft-marketplace\\src\\store\\marketplace-context.js":"8","C:\\a\\nft-marketplace\\src\\connection\\web3.js":"9","C:\\a\\nft-marketplace\\src\\components\\Content\\Main.js":"10","C:\\a\\nft-marketplace\\src\\components\\Layout\\Navbar.js":"11","C:\\a\\nft-marketplace\\src\\components\\Layout\\Spinner.js":"12","C:\\a\\nft-marketplace\\src\\components\\Content\\MintNFT\\MintForm.js":"13","C:\\a\\nft-marketplace\\src\\components\\Content\\NFTCollection\\NFTCollection.js":"14","C:\\a\\nft-marketplace\\src\\helpers\\utils.js":"15","C:\\a\\nft-marketplace\\src\\components\\DisplayUserNft.js":"16","C:\\a\\nft-marketplace\\src\\components\\Content\\SpecificSearch.js":"17","C:\\a\\nft-marketplace\\src\\components\\Content\\Filtered.js":"18"},{"size":508,"mtime":1643476565478,"results":"19","hashOfConfig":"20"},{"size":5486,"mtime":1649839434575,"results":"21","hashOfConfig":"20"},{"size":5208,"mtime":1643476565478,"results":"22","hashOfConfig":"20"},{"size":1385,"mtime":1643476565478,"results":"23","hashOfConfig":"20"},{"size":5463,"mtime":1650282741104,"results":"24","hashOfConfig":"20"},{"size":198,"mtime":1643476565478,"results":"25","hashOfConfig":"20"},{"size":411,"mtime":1650278649211,"results":"26","hashOfConfig":"20"},{"size":406,"mtime":1643476565478,"results":"27","hashOfConfig":"20"},{"size":138,"mtime":1643476565478,"results":"28","hashOfConfig":"20"},{"size":1119,"mtime":1649317838289,"results":"29","hashOfConfig":"20"},{"size":3261,"mtime":1649840589959,"results":"30","hashOfConfig":"20"},{"size":191,"mtime":1643476565478,"results":"31","hashOfConfig":"20"},{"size":4914,"mtime":1649840553866,"results":"32","hashOfConfig":"20"},{"size":6600,"mtime":1649840501280,"results":"33","hashOfConfig":"20"},{"size":280,"mtime":1643476565478,"results":"34","hashOfConfig":"20"},{"size":1084,"mtime":1649841164833,"results":"35","hashOfConfig":"20"},{"size":2,"mtime":1649836457437,"results":"36","hashOfConfig":"20"},{"size":629,"mtime":1650277901362,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"bhymug",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},"C:\\a\\nft-marketplace\\src\\index.js",[],["79","80"],"C:\\a\\nft-marketplace\\src\\App.js",["81","82"],"import React, { useContext, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport web3 from \"./connection/web3\";\r\nimport Navbar from \"./components/Layout/Navbar\";\r\nimport Main from \"./components/Content/Main\";\r\nimport Web3Context from \"./store/web3-context\";\r\nimport CollectionContext from \"./store/collection-context\";\r\nimport MarketplaceContext from \"./store/marketplace-context\";\r\nimport NFTCollection from \"./abis/NFTCollection.json\";\r\nimport NFTMarketplace from \"./abis/NFTMarketplace.json\";\r\nimport DisplayUserNft from \"./components/DisplayUserNft\";\r\nimport SpecificSearch from \"./components/Content/SpecificSearch\";\r\n\r\nconst App = () => {\r\n  const web3Ctx = useContext(Web3Context);\r\n  const collectionCtx = useContext(CollectionContext);\r\n  const marketplaceCtx = useContext(MarketplaceContext);\r\n\r\n  useEffect(() => {\r\n    // Check if the user has Metamask active\r\n    if (!web3) {\r\n      window.alert(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Function to fetch all the blockchain data\r\n    const loadBlockchainData = async () => {\r\n      // Request accounts acccess if needed\r\n      try {\r\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n\r\n      // Load account\r\n      const account = await web3Ctx.loadAccount(web3);\r\n\r\n      // Load Network ID\r\n      const networkId = await web3Ctx.loadNetworkId(web3);\r\n\r\n      // Load Contracts\r\n      const nftDeployedNetwork = NFTCollection.networks[networkId];\r\n      const nftContract = collectionCtx.loadContract(\r\n        web3,\r\n        NFTCollection,\r\n        nftDeployedNetwork\r\n      );\r\n\r\n      const mktDeployedNetwork = NFTMarketplace.networks[networkId];\r\n      const mktContract = marketplaceCtx.loadContract(\r\n        web3,\r\n        NFTMarketplace,\r\n        mktDeployedNetwork\r\n      );\r\n\r\n      if (nftContract) {\r\n        // Load total Supply\r\n        const totalSupply = await collectionCtx.loadTotalSupply(nftContract);\r\n\r\n        // Load Collection\r\n        collectionCtx.loadCollection(nftContract, totalSupply);\r\n\r\n        // Event subscription\r\n        nftContract.events\r\n          .Transfer()\r\n          .on(\"data\", (event) => {\r\n            collectionCtx.updateCollection(\r\n              nftContract,\r\n              event.returnValues.tokenId,\r\n              event.returnValues.to\r\n            );\r\n            collectionCtx.setNftIsLoading(false);\r\n          })\r\n          .on(\"error\", (error) => {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        window.alert(\r\n          \"NFTCollection contract not deployed to detected network.\"\r\n        );\r\n      }\r\n\r\n      if (mktContract) {\r\n        // Load offer count\r\n        const offerCount = await marketplaceCtx.loadOfferCount(mktContract);\r\n\r\n        // Load offers\r\n        marketplaceCtx.loadOffers(mktContract, offerCount);\r\n\r\n        // Load User Funds\r\n        account && marketplaceCtx.loadUserFunds(mktContract, account);\r\n\r\n        // Event OfferFilled subscription\r\n        mktContract.events\r\n          .OfferFilled()\r\n          .on(\"data\", (event) => {\r\n            marketplaceCtx.updateOffer(event.returnValues.offerId);\r\n            collectionCtx.updateOwner(\r\n              event.returnValues.id,\r\n              event.returnValues.newOwner\r\n            );\r\n            marketplaceCtx.setMktIsLoading(false);\r\n          })\r\n          .on(\"error\", (error) => {\r\n            console.log(error);\r\n          });\r\n\r\n        // Event Offer subscription\r\n        mktContract.events\r\n          .Offer()\r\n          .on(\"data\", (event) => {\r\n            marketplaceCtx.addOffer(event.returnValues);\r\n            marketplaceCtx.setMktIsLoading(false);\r\n          })\r\n          .on(\"error\", (error) => {\r\n            console.log(error);\r\n          });\r\n\r\n        // Event offerCancelled subscription\r\n        mktContract.events\r\n          .OfferCancelled()\r\n          .on(\"data\", (event) => {\r\n            marketplaceCtx.updateOffer(event.returnValues.offerId);\r\n            collectionCtx.updateOwner(\r\n              event.returnValues.id,\r\n              event.returnValues.owner\r\n            );\r\n            marketplaceCtx.setMktIsLoading(false);\r\n          })\r\n          .on(\"error\", (error) => {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        window.alert(\r\n          \"NFTMarketplace contract not deployed to detected network.\"\r\n        );\r\n      }\r\n\r\n      collectionCtx.setNftIsLoading(false);\r\n      marketplaceCtx.setMktIsLoading(false);\r\n\r\n      // Metamask Event Subscription - Account changed\r\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n        web3Ctx.loadAccount(web3);\r\n        accounts[0] && marketplaceCtx.loadUserFunds(mktContract, accounts[0]);\r\n      });\r\n\r\n      // Metamask Event Subscription - Network changed\r\n      window.ethereum.on(\"chainChanged\", (chainId) => {\r\n        window.location.reload();\r\n      });\r\n    };\r\n\r\n    loadBlockchainData();\r\n  }, []);\r\n\r\n  const showNavbar = web3 && collectionCtx.contract && marketplaceCtx.contract;\r\n  const showContent =\r\n    web3 &&\r\n    collectionCtx.contract &&\r\n    marketplaceCtx.contract &&\r\n    web3Ctx.account;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"grad\">\r\n        {showNavbar && <Navbar />}\r\n        <DisplayUserNft />\r\n        {showContent && <Main />}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\a\\nft-marketplace\\src\\store\\MarketplaceProvider.js",[],"C:\\a\\nft-marketplace\\src\\store\\Web3Provider.js",[],"C:\\a\\nft-marketplace\\src\\store\\CollectionProvider.js",[],"C:\\a\\nft-marketplace\\src\\store\\web3-context.js",[],"C:\\a\\nft-marketplace\\src\\store\\collection-context.js",[],"C:\\a\\nft-marketplace\\src\\store\\marketplace-context.js",[],"C:\\a\\nft-marketplace\\src\\connection\\web3.js",[],"C:\\a\\nft-marketplace\\src\\components\\Content\\Main.js",["83"],"import { useContext } from \"react\";\r\n\r\nimport MintForm from \"./MintNFT/MintForm\";\r\nimport NFTCollection from \"./NFTCollection/NFTCollection\";\r\nimport CollectionContext from \"../../store/collection-context\";\r\nimport MarketplaceContext from \"../../store/marketplace-context\";\r\nimport Spinner from \"../Layout/Spinner\";\r\nimport logo from \"../../img/logo2.PNG\";\r\n\r\nconst Main = () => {\r\n  const collectionCtx = useContext(CollectionContext);\r\n  const marketplaceCtx = useContext(MarketplaceContext);\r\n\r\n  return (\r\n    <div className=\"container-fluid mt-2 GradientBackground css-royksr\">\r\n      <div className=\"row\">\r\n        <main\r\n          role=\"main\"\r\n          className=\"col-lg-12 justify-content-center text-center\"\r\n        >\r\n          <div className=\"content mr-auto ml-auto\">\r\n            {!collectionCtx.nftIsLoading && <MintForm />}\r\n            {collectionCtx.nftIsLoading && <Spinner />}\r\n          </div>\r\n        </main>\r\n      </div>\r\n      <hr />\r\n      {!marketplaceCtx.mktIsLoading && <NFTCollection />}\r\n      {marketplaceCtx.mktIsLoading && <Spinner />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\a\\nft-marketplace\\src\\components\\Layout\\Navbar.js",[],"C:\\a\\nft-marketplace\\src\\components\\Layout\\Spinner.js",[],"C:\\a\\nft-marketplace\\src\\components\\Content\\MintNFT\\MintForm.js",[],"C:\\a\\nft-marketplace\\src\\components\\Content\\NFTCollection\\NFTCollection.js",[],"C:\\a\\nft-marketplace\\src\\helpers\\utils.js",[],"C:\\a\\nft-marketplace\\src\\components\\DisplayUserNft.js",["84"],"import { useState } from \"react\";\r\nimport Filtered from \"./Content/Filtered\";\r\nconst DisplayUserNft = () => {\r\n  const [hashValue, setHashValue] = useState(\"\");\r\n  const hashValueHandler = (e) => {\r\n    setHashValue(e.target.value);\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  const search = (e) => {\r\n    e.preventDefault();\r\n    window.open(`https://ipfs.io/ipfs/${hashValue}`, \"_blank\");\r\n    setHashValue(\"\");\r\n  };\r\n  const nft = (e) => {\r\n    setHashValue(e.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"hi\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter hash or id\"\r\n            value={hashValue}\r\n            onChange={hashValueHandler}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-outline-danger\"\r\n            onClick={search}\r\n          >\r\n            Search ipfs\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <Filtered id={hashValue} />\r\n    </div>\r\n  );\r\n};\r\nexport default DisplayUserNft;\r\n","C:\\a\\nft-marketplace\\src\\components\\Content\\SpecificSearch.js",[],"C:\\a\\nft-marketplace\\src\\components\\Content\\Filtered.js",["85","86","87"],"import CollectionContext from \"../../store/collection-context\";\r\nimport { useContext } from \"react\";\r\nconst Filtered = (props) => {\r\n  const collectionCtx = useContext(CollectionContext);\r\n  const filteredData = () => {};\r\n  return (\r\n    <div>\r\n      {collectionCtx.collection\r\n        .filter((nft) => nft.owner == props.id)\r\n        .map((nft) => (\r\n          <ul className=\"di\">\r\n            <li>{nft.id}</li>\r\n            <li>{nft.title}</li>\r\n            <img src={`https://ipfs.infura.io/ipfs/${nft.img}`} />\r\n            <li>{nft.owner}</li>\r\n          </ul>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Filtered;\r\n",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":12,"column":8,"nodeType":"94","messageId":"95","endLine":12,"endColumn":22},{"ruleId":"96","severity":1,"message":"97","line":157,"column":6,"nodeType":"98","endLine":157,"endColumn":8,"suggestions":"99"},{"ruleId":"92","severity":1,"message":"100","line":8,"column":8,"nodeType":"94","messageId":"95","endLine":8,"endColumn":12},{"ruleId":"92","severity":1,"message":"101","line":16,"column":9,"nodeType":"94","messageId":"95","endLine":16,"endColumn":12},{"ruleId":"92","severity":1,"message":"102","line":5,"column":9,"nodeType":"94","messageId":"95","endLine":5,"endColumn":21},{"ruleId":"103","severity":1,"message":"104","line":9,"column":36,"nodeType":"105","messageId":"106","endLine":9,"endColumn":38},{"ruleId":"107","severity":1,"message":"108","line":14,"column":13,"nodeType":"109","endLine":14,"endColumn":67},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'SpecificSearch' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'collectionCtx', 'marketplaceCtx', and 'web3Ctx'. Either include them or remove the dependency array.","ArrayExpression",["112"],"'logo' is defined but never used.","'nft' is assigned a value but never used.","'filteredData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [collectionCtx, marketplaceCtx, web3Ctx]",{"range":"115","text":"116"},[5041,5043],"[collectionCtx, marketplaceCtx, web3Ctx]"]