{"ast":null,"code":"import _regeneratorRuntime from \"C:/a/nft-marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/a/nft-marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\a\\\\nft-marketplace\\\\src\\\\App.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport \"./App.css\";\nimport web3 from \"./connection/web3\";\nimport Navbar from \"./components/Layout/Navbar\";\nimport Main from \"./components/Content/Main\";\nimport Web3Context from \"./store/web3-context\";\nimport CollectionContext from \"./store/collection-context\";\nimport MarketplaceContext from \"./store/marketplace-context\";\nimport NFTCollection from \"./abis/NFTCollection.json\";\nimport NFTMarketplace from \"./abis/NFTMarketplace.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar App = function App() {\n  _s();\n\n  var web3Ctx = useContext(Web3Context);\n  var collectionCtx = useContext(CollectionContext);\n  var marketplaceCtx = useContext(MarketplaceContext);\n  useEffect(function () {\n    // Check if the user has Metamask active\n    if (!web3) {\n      window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n      return;\n    } // Function to fetch all the blockchain data\n\n\n    var loadBlockchainData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var account, networkId, nftDeployedNetwork, nftContract, mktDeployedNetwork, mktContract, totalSupply, offerCount;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return window.ethereum.request({\n                  method: \"eth_requestAccounts\"\n                });\n\n              case 3:\n                _context.next = 8;\n                break;\n\n              case 5:\n                _context.prev = 5;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n\n              case 8:\n                _context.next = 10;\n                return web3Ctx.loadAccount(web3);\n\n              case 10:\n                account = _context.sent;\n                _context.next = 13;\n                return web3Ctx.loadNetworkId(web3);\n\n              case 13:\n                networkId = _context.sent;\n                // Load Contracts\n                nftDeployedNetwork = NFTCollection.networks[networkId];\n                nftContract = collectionCtx.loadContract(web3, NFTCollection, nftDeployedNetwork);\n                mktDeployedNetwork = NFTMarketplace.networks[networkId];\n                mktContract = marketplaceCtx.loadContract(web3, NFTMarketplace, mktDeployedNetwork);\n\n                if (!nftContract) {\n                  _context.next = 26;\n                  break;\n                }\n\n                _context.next = 21;\n                return collectionCtx.loadTotalSupply(nftContract);\n\n              case 21:\n                totalSupply = _context.sent;\n                // Load Collection\n                collectionCtx.loadCollection(nftContract, totalSupply); // Event subscription\n\n                nftContract.events.Transfer().on(\"data\", function (event) {\n                  collectionCtx.updateCollection(nftContract, event.returnValues.tokenId, event.returnValues.to);\n                  collectionCtx.setNftIsLoading(false);\n                }).on(\"error\", function (error) {\n                  console.log(error);\n                });\n                _context.next = 27;\n                break;\n\n              case 26:\n                window.alert(\"NFTCollection contract not deployed to detected network.\");\n\n              case 27:\n                if (!mktContract) {\n                  _context.next = 38;\n                  break;\n                }\n\n                _context.next = 30;\n                return marketplaceCtx.loadOfferCount(mktContract);\n\n              case 30:\n                offerCount = _context.sent;\n                // Load offers\n                marketplaceCtx.loadOffers(mktContract, offerCount); // Load User Funds\n\n                account && marketplaceCtx.loadUserFunds(mktContract, account); // Event OfferFilled subscription\n\n                mktContract.events.OfferFilled().on(\"data\", function (event) {\n                  marketplaceCtx.updateOffer(event.returnValues.offerId);\n                  collectionCtx.updateOwner(event.returnValues.id, event.returnValues.newOwner);\n                  marketplaceCtx.setMktIsLoading(false);\n                }).on(\"error\", function (error) {\n                  console.log(error);\n                }); // Event Offer subscription\n\n                mktContract.events.Offer().on(\"data\", function (event) {\n                  marketplaceCtx.addOffer(event.returnValues);\n                  marketplaceCtx.setMktIsLoading(false);\n                }).on(\"error\", function (error) {\n                  console.log(error);\n                }); // Event offerCancelled subscription\n\n                mktContract.events.OfferCancelled().on(\"data\", function (event) {\n                  marketplaceCtx.updateOffer(event.returnValues.offerId);\n                  collectionCtx.updateOwner(event.returnValues.id, event.returnValues.owner);\n                  marketplaceCtx.setMktIsLoading(false);\n                }).on(\"error\", function (error) {\n                  console.log(error);\n                });\n                _context.next = 39;\n                break;\n\n              case 38:\n                window.alert(\"NFTMarketplace contract not deployed to detected network.\");\n\n              case 39:\n                collectionCtx.setNftIsLoading(false);\n                marketplaceCtx.setMktIsLoading(false); // Metamask Event Subscription - Account changed\n\n                window.ethereum.on(\"accountsChanged\", function (accounts) {\n                  web3Ctx.loadAccount(web3);\n                  accounts[0] && marketplaceCtx.loadUserFunds(mktContract, accounts[0]);\n                }); // Metamask Event Subscription - Network changed\n\n                window.ethereum.on(\"chainChanged\", function (chainId) {\n                  window.location.reload();\n                });\n\n              case 43:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 5]]);\n      }));\n\n      return function loadBlockchainData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    loadBlockchainData();\n  }, []);\n  var showNavbar = web3 && collectionCtx.contract && marketplaceCtx.contract;\n  var showContent = web3 && collectionCtx.contract && marketplaceCtx.contract && web3Ctx.account;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grad\",\n      children: [showNavbar && /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 24\n      }, _this), showContent && /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(App, \"QYETbDCP4prlMG6eXnWb+t6474A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/a/nft-marketplace/src/App.js"],"names":["React","useContext","useEffect","web3","Navbar","Main","Web3Context","CollectionContext","MarketplaceContext","NFTCollection","NFTMarketplace","App","web3Ctx","collectionCtx","marketplaceCtx","window","alert","loadBlockchainData","ethereum","request","method","console","error","loadAccount","account","loadNetworkId","networkId","nftDeployedNetwork","networks","nftContract","loadContract","mktDeployedNetwork","mktContract","loadTotalSupply","totalSupply","loadCollection","events","Transfer","on","event","updateCollection","returnValues","tokenId","to","setNftIsLoading","log","loadOfferCount","offerCount","loadOffers","loadUserFunds","OfferFilled","updateOffer","offerId","updateOwner","id","newOwner","setMktIsLoading","Offer","addOffer","OfferCancelled","owner","accounts","chainId","location","reload","showNavbar","contract","showContent"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport web3 from \"./connection/web3\";\r\nimport Navbar from \"./components/Layout/Navbar\";\r\nimport Main from \"./components/Content/Main\";\r\nimport Web3Context from \"./store/web3-context\";\r\nimport CollectionContext from \"./store/collection-context\";\r\nimport MarketplaceContext from \"./store/marketplace-context\";\r\nimport NFTCollection from \"./abis/NFTCollection.json\";\r\nimport NFTMarketplace from \"./abis/NFTMarketplace.json\";\r\n\r\nconst App = () => {\r\n  const web3Ctx = useContext(Web3Context);\r\n  const collectionCtx = useContext(CollectionContext);\r\n  const marketplaceCtx = useContext(MarketplaceContext);\r\n\r\n  useEffect(() => {\r\n    // Check if the user has Metamask active\r\n    if (!web3) {\r\n      window.alert(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Function to fetch all the blockchain data\r\n    const loadBlockchainData = async () => {\r\n      // Request accounts acccess if needed\r\n      try {\r\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n\r\n      // Load account\r\n      const account = await web3Ctx.loadAccount(web3);\r\n\r\n      // Load Network ID\r\n      const networkId = await web3Ctx.loadNetworkId(web3);\r\n\r\n      // Load Contracts\r\n      const nftDeployedNetwork = NFTCollection.networks[networkId];\r\n      const nftContract = collectionCtx.loadContract(\r\n        web3,\r\n        NFTCollection,\r\n        nftDeployedNetwork\r\n      );\r\n\r\n      const mktDeployedNetwork = NFTMarketplace.networks[networkId];\r\n      const mktContract = marketplaceCtx.loadContract(\r\n        web3,\r\n        NFTMarketplace,\r\n        mktDeployedNetwork\r\n      );\r\n\r\n      if (nftContract) {\r\n        // Load total Supply\r\n        const totalSupply = await collectionCtx.loadTotalSupply(nftContract);\r\n\r\n        // Load Collection\r\n        collectionCtx.loadCollection(nftContract, totalSupply);\r\n\r\n        // Event subscription\r\n        nftContract.events\r\n          .Transfer()\r\n          .on(\"data\", (event) => {\r\n            collectionCtx.updateCollection(\r\n              nftContract,\r\n              event.returnValues.tokenId,\r\n              event.returnValues.to\r\n            );\r\n            collectionCtx.setNftIsLoading(false);\r\n          })\r\n          .on(\"error\", (error) => {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        window.alert(\r\n          \"NFTCollection contract not deployed to detected network.\"\r\n        );\r\n      }\r\n\r\n      if (mktContract) {\r\n        // Load offer count\r\n        const offerCount = await marketplaceCtx.loadOfferCount(mktContract);\r\n\r\n        // Load offers\r\n        marketplaceCtx.loadOffers(mktContract, offerCount);\r\n\r\n        // Load User Funds\r\n        account && marketplaceCtx.loadUserFunds(mktContract, account);\r\n\r\n        // Event OfferFilled subscription\r\n        mktContract.events\r\n          .OfferFilled()\r\n          .on(\"data\", (event) => {\r\n            marketplaceCtx.updateOffer(event.returnValues.offerId);\r\n            collectionCtx.updateOwner(\r\n              event.returnValues.id,\r\n              event.returnValues.newOwner\r\n            );\r\n            marketplaceCtx.setMktIsLoading(false);\r\n          })\r\n          .on(\"error\", (error) => {\r\n            console.log(error);\r\n          });\r\n\r\n        // Event Offer subscription\r\n        mktContract.events\r\n          .Offer()\r\n          .on(\"data\", (event) => {\r\n            marketplaceCtx.addOffer(event.returnValues);\r\n            marketplaceCtx.setMktIsLoading(false);\r\n          })\r\n          .on(\"error\", (error) => {\r\n            console.log(error);\r\n          });\r\n\r\n        // Event offerCancelled subscription\r\n        mktContract.events\r\n          .OfferCancelled()\r\n          .on(\"data\", (event) => {\r\n            marketplaceCtx.updateOffer(event.returnValues.offerId);\r\n            collectionCtx.updateOwner(\r\n              event.returnValues.id,\r\n              event.returnValues.owner\r\n            );\r\n            marketplaceCtx.setMktIsLoading(false);\r\n          })\r\n          .on(\"error\", (error) => {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        window.alert(\r\n          \"NFTMarketplace contract not deployed to detected network.\"\r\n        );\r\n      }\r\n\r\n      collectionCtx.setNftIsLoading(false);\r\n      marketplaceCtx.setMktIsLoading(false);\r\n\r\n      // Metamask Event Subscription - Account changed\r\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n        web3Ctx.loadAccount(web3);\r\n        accounts[0] && marketplaceCtx.loadUserFunds(mktContract, accounts[0]);\r\n      });\r\n\r\n      // Metamask Event Subscription - Network changed\r\n      window.ethereum.on(\"chainChanged\", (chainId) => {\r\n        window.location.reload();\r\n      });\r\n    };\r\n\r\n    loadBlockchainData();\r\n  }, []);\r\n\r\n  const showNavbar = web3 && collectionCtx.contract && marketplaceCtx.contract;\r\n  const showContent =\r\n    web3 &&\r\n    collectionCtx.contract &&\r\n    marketplaceCtx.contract &&\r\n    web3Ctx.account;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"grad\">\r\n        {showNavbar && <Navbar />}\r\n        {showContent && <Main />}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}