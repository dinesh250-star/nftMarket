{"ast":null,"code":"var _jsxFileName = \"C:\\\\a\\\\nft-marketplace\\\\src\\\\components\\\\Content\\\\Filtered.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport CollectionContext from \"../../../store/collection-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Filtered = function Filtered(props) {\n  _s();\n\n  var collectionCtx = useContext(CollectionContext);\n\n  var filteredData = function filteredData() {\n    {\n      collectionCtx.collection.filter(function (nft) {\n        return nft.id == props.id;\n      }).map(function (nft) {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: nft.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: nft.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://ipfs.infura.io/ipfs/\".concat(nft.img)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, _this);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Filtered, \"pP49kZfxXidiPJVbjeXrXhalSXw=\");\n\n_c = Filtered;\nexport default Filtered;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filtered\");","map":{"version":3,"sources":["C:/a/nft-marketplace/src/components/Content/Filtered.js"],"names":["CollectionContext","Filtered","props","collectionCtx","useContext","filteredData","collection","filter","nft","id","map","title","img"],"mappings":";;;;AAAA,OAAOA,iBAAP,MAA8B,mCAA9B;;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA;;AAC1B,MAAMC,aAAa,GAAGC,UAAU,CAACJ,iBAAD,CAAhC;;AACA,MAAMK,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB;AACEF,MAAAA,aAAa,CAACG,UAAd,CACGC,MADH,CACU,UAACC,GAAD;AAAA,eAASA,GAAG,CAACC,EAAJ,IAAUP,KAAK,CAACO,EAAzB;AAAA,OADV,EAEGC,GAFH,CAEO,UAACF,GAAD;AAAA,4BACH;AAAA,kCACE;AAAA,sBAAKA,GAAG,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA,sBAAKD,GAAG,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,mBAFF,eAGE;AAAK,YAAA,GAAG,wCAAiCH,GAAG,CAACI,GAArC;AAAR;AAAA;AAAA;AAAA;AAAA,mBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADG;AAAA,OAFP;AASD;AACF,GAZD;;AAaA,sBAAO;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAhBD;;GAAMX,Q;;KAAAA,Q;AAiBN,eAAeA,QAAf","sourcesContent":["import CollectionContext from \"../../../store/collection-context\";\r\nconst Filtered = (props) => {\r\n  const collectionCtx = useContext(CollectionContext);\r\n  const filteredData = () => {\r\n    {\r\n      collectionCtx.collection\r\n        .filter((nft) => nft.id == props.id)\r\n        .map((nft) => (\r\n          <ul>\r\n            <li>{nft.id}</li>\r\n            <li>{nft.title}</li>\r\n            <img src={`https://ipfs.infura.io/ipfs/${nft.img}`} />\r\n          </ul>\r\n        ));\r\n    }\r\n  };\r\n  return <div></div>;\r\n};\r\nexport default Filtered;\r\n"]},"metadata":{},"sourceType":"module"}