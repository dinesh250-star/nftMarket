{"ast":null,"code":"import _regeneratorRuntime from \"C:/a/nft-marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/a/nft-marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/a/nft-marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"C:/a/nft-marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"C:\\\\a\\\\nft-marketplace\\\\src\\\\store\\\\MarketplaceProvider.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport MarketplaceContext from './marketplace-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar defaultMarketplaceState = {\n  contract: null,\n  offerCount: null,\n  offers: [],\n  userFunds: null,\n  mktIsLoading: true\n};\n\nvar marketplaceReducer = function marketplaceReducer(state, action) {\n  if (action.type === 'CONTRACT') {\n    return {\n      contract: action.contract,\n      offerCount: state.offerCount,\n      offers: state.offers,\n      userFunds: state.userFunds,\n      mktIsLoading: state.mktIsLoading\n    };\n  }\n\n  if (action.type === 'LOADOFFERCOUNT') {\n    return {\n      contract: state.contract,\n      offerCount: action.offerCount,\n      offers: state.offers,\n      userFunds: state.userFunds,\n      mktIsLoading: state.mktIsLoading\n    };\n  }\n\n  if (action.type === 'LOADOFFERS') {\n    return {\n      contract: state.contract,\n      offerCount: state.offerCount,\n      offers: action.offers,\n      userFunds: state.userFunds,\n      mktIsLoading: state.mktIsLoading\n    };\n  }\n\n  if (action.type === 'UPDATEOFFER') {\n    var offers = state.offers.filter(function (offer) {\n      return offer.offerId !== parseInt(action.offerId);\n    });\n    return {\n      contract: state.contract,\n      offerCount: state.offerCount,\n      offers: offers,\n      userFunds: state.userFunds,\n      mktIsLoading: state.mktIsLoading\n    };\n  }\n\n  if (action.type === 'ADDOFFER') {\n    var index = state.offers.findIndex(function (offer) {\n      return offer.offerId === parseInt(action.offer.offerId);\n    });\n    var _offers = [];\n\n    if (index === -1) {\n      _offers = [].concat(_toConsumableArray(state.offers), [{\n        offerId: parseInt(action.offer.offerId),\n        id: parseInt(action.offer.id),\n        user: action.offer.user,\n        price: parseInt(action.offer.price),\n        fulfilled: false,\n        cancelled: false\n      }]);\n    } else {\n      _offers = _toConsumableArray(state.offers);\n    }\n\n    return {\n      contract: state.contract,\n      offerCount: state.offerCount,\n      offers: _offers,\n      userFunds: state.userFunds,\n      mktIsLoading: state.mktIsLoading\n    };\n  }\n\n  if (action.type === 'LOADFUNDS') {\n    return {\n      contract: state.contract,\n      offerCount: state.offerCount,\n      offers: state.offers,\n      userFunds: action.userFunds,\n      mktIsLoading: state.mktIsLoading\n    };\n  }\n\n  if (action.type === 'LOADING') {\n    return {\n      contract: state.contract,\n      offerCount: state.offerCount,\n      offers: state.offers,\n      userFunds: state.userFunds,\n      mktIsLoading: action.loading\n    };\n  }\n\n  return defaultMarketplaceState;\n};\n\nvar MarketplaceProvider = function MarketplaceProvider(props) {\n  _s();\n\n  var _useReducer = useReducer(marketplaceReducer, defaultMarketplaceState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      MarketplaceState = _useReducer2[0],\n      dispatchMarketplaceAction = _useReducer2[1];\n\n  var loadContractHandler = function loadContractHandler(web3, NFTMarketplace, deployedNetwork) {\n    var contract = deployedNetwork ? new web3.eth.Contract(NFTMarketplace.abi, deployedNetwork.address) : '';\n    dispatchMarketplaceAction({\n      type: 'CONTRACT',\n      contract: contract\n    });\n    return contract;\n  };\n\n  var loadOfferCountHandler = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(contract) {\n      var offerCount;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return contract.methods.offerCount().call();\n\n            case 2:\n              offerCount = _context.sent;\n              dispatchMarketplaceAction({\n                type: 'LOADOFFERCOUNT',\n                offerCount: offerCount\n              });\n              return _context.abrupt(\"return\", offerCount);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadOfferCountHandler(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var loadOffersHandler = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(contract, offerCount) {\n      var offers, i, offer;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              offers = [];\n              i = 0;\n\n            case 2:\n              if (!(i < offerCount)) {\n                _context2.next = 10;\n                break;\n              }\n\n              _context2.next = 5;\n              return contract.methods.offers(i + 1).call();\n\n            case 5:\n              offer = _context2.sent;\n              offers.push(offer);\n\n            case 7:\n              i++;\n              _context2.next = 2;\n              break;\n\n            case 10:\n              offers = offers.map(function (offer) {\n                offer.offerId = parseInt(offer.offerId);\n                offer.id = parseInt(offer.id);\n                offer.price = parseInt(offer.price);\n                return offer;\n              }).filter(function (offer) {\n                return offer.fulfilled === false && offer.cancelled === false;\n              });\n              dispatchMarketplaceAction({\n                type: 'LOADOFFERS',\n                offers: offers\n              });\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadOffersHandler(_x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var updateOfferHandler = function updateOfferHandler(offerId) {\n    dispatchMarketplaceAction({\n      type: 'UPDATEOFFER',\n      offerId: offerId\n    });\n  };\n\n  var addOfferHandler = function addOfferHandler(offer) {\n    dispatchMarketplaceAction({\n      type: 'ADDOFFER',\n      offer: offer\n    });\n  };\n\n  var loadUserFundsHandler = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(contract, account) {\n      var userFunds;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return contract.methods.userFunds(account).call();\n\n            case 2:\n              userFunds = _context3.sent;\n              dispatchMarketplaceAction({\n                type: 'LOADFUNDS',\n                userFunds: userFunds\n              });\n              return _context3.abrupt(\"return\", userFunds);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function loadUserFundsHandler(_x4, _x5) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var setMktIsLoadingHandler = function setMktIsLoadingHandler(loading) {\n    dispatchMarketplaceAction({\n      type: 'LOADING',\n      loading: loading\n    });\n  };\n\n  var marketplaceContext = {\n    contract: MarketplaceState.contract,\n    offerCount: MarketplaceState.offerCount,\n    offers: MarketplaceState.offers,\n    userFunds: MarketplaceState.userFunds,\n    mktIsLoading: MarketplaceState.mktIsLoading,\n    loadContract: loadContractHandler,\n    loadOfferCount: loadOfferCountHandler,\n    loadOffers: loadOffersHandler,\n    updateOffer: updateOfferHandler,\n    addOffer: addOfferHandler,\n    loadUserFunds: loadUserFundsHandler,\n    setMktIsLoading: setMktIsLoadingHandler\n  };\n  return /*#__PURE__*/_jsxDEV(MarketplaceContext.Provider, {\n    value: marketplaceContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MarketplaceProvider, \"qURDyvmHJx/S4MyDQITlv6yYzq8=\");\n\n_c = MarketplaceProvider;\nexport default MarketplaceProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarketplaceProvider\");","map":{"version":3,"sources":["C:/a/nft-marketplace/src/store/MarketplaceProvider.js"],"names":["useReducer","MarketplaceContext","defaultMarketplaceState","contract","offerCount","offers","userFunds","mktIsLoading","marketplaceReducer","state","action","type","filter","offer","offerId","parseInt","index","findIndex","id","user","price","fulfilled","cancelled","loading","MarketplaceProvider","props","MarketplaceState","dispatchMarketplaceAction","loadContractHandler","web3","NFTMarketplace","deployedNetwork","eth","Contract","abi","address","loadOfferCountHandler","methods","call","loadOffersHandler","i","push","map","updateOfferHandler","addOfferHandler","loadUserFundsHandler","account","setMktIsLoadingHandler","marketplaceContext","loadContract","loadOfferCount","loadOffers","updateOffer","addOffer","loadUserFunds","setMktIsLoading","children"],"mappings":"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","sourcesContent":["import { useReducer } from 'react';\r\n\r\nimport MarketplaceContext from './marketplace-context';\r\n\r\nconst defaultMarketplaceState = {\r\n  contract: null,\r\n  offerCount: null,\r\n  offers: [],\r\n  userFunds: null,\r\n  mktIsLoading: true\r\n};\r\n\r\nconst marketplaceReducer = (state, action) => {\r\n  if(action.type === 'CONTRACT') {    \r\n    return {\r\n      contract: action.contract,\r\n      offerCount: state.offerCount,\r\n      offers: state.offers,\r\n      userFunds: state.userFunds,\r\n      mktIsLoading: state.mktIsLoading\r\n    };\r\n  }\r\n\r\n  if(action.type === 'LOADOFFERCOUNT') {    \r\n    return {\r\n      contract: state.contract,\r\n      offerCount: action.offerCount,\r\n      offers: state.offers,\r\n      userFunds: state.userFunds,\r\n      mktIsLoading: state.mktIsLoading\r\n    };\r\n  }\r\n\r\n  if(action.type === 'LOADOFFERS') {    \r\n    return {\r\n      contract: state.contract,\r\n      offerCount: state.offerCount,\r\n      offers: action.offers,\r\n      userFunds: state.userFunds,\r\n      mktIsLoading: state.mktIsLoading\r\n    };\r\n  }\r\n\r\n  if(action.type === 'UPDATEOFFER') {    \r\n    const offers = state.offers.filter(offer => offer.offerId !== parseInt(action.offerId));\r\n\r\n    return {\r\n      contract: state.contract,\r\n      offerCount: state.offerCount,\r\n      offers: offers,\r\n      userFunds: state.userFunds,\r\n      mktIsLoading: state.mktIsLoading\r\n    };\r\n  }\r\n\r\n  if(action.type === 'ADDOFFER') {    \r\n    const index = state.offers.findIndex(offer => offer.offerId === parseInt(action.offer.offerId));\r\n    let offers = [];\r\n\r\n    if(index === -1) {\r\n      offers = [...state.offers, {\r\n        offerId: parseInt(action.offer.offerId),\r\n        id: parseInt(action.offer.id),\r\n        user: (action.offer.user),\r\n        price: parseInt(action.offer.price),\r\n        fulfilled: false,\r\n        cancelled: false\r\n      }];\r\n    } else {\r\n      offers = [...state.offers];\r\n    }    \r\n\r\n    return {\r\n      contract: state.contract,\r\n      offerCount: state.offerCount,\r\n      offers: offers,\r\n      userFunds: state.userFunds,\r\n      mktIsLoading: state.mktIsLoading\r\n    };\r\n  }\r\n\r\n  if(action.type === 'LOADFUNDS') {\r\n    return {\r\n      contract: state.contract,\r\n      offerCount: state.offerCount,\r\n      offers: state.offers,\r\n      userFunds: action.userFunds,\r\n      mktIsLoading: state.mktIsLoading\r\n    };\r\n  }\r\n\r\n  if(action.type === 'LOADING') {    \r\n    return {\r\n      contract: state.contract,\r\n      offerCount: state.offerCount,\r\n      offers: state.offers,\r\n      userFunds: state.userFunds,\r\n      mktIsLoading: action.loading\r\n    };\r\n  }\r\n  \r\n  return defaultMarketplaceState;\r\n};\r\n\r\nconst MarketplaceProvider = props => {\r\n  const [MarketplaceState, dispatchMarketplaceAction] = useReducer(marketplaceReducer, defaultMarketplaceState);\r\n  \r\n  const loadContractHandler = (web3, NFTMarketplace, deployedNetwork) => {\r\n    const contract = deployedNetwork ? new web3.eth.Contract(NFTMarketplace.abi, deployedNetwork.address): '';\r\n    dispatchMarketplaceAction({type: 'CONTRACT', contract: contract}); \r\n    return contract;\r\n  };\r\n\r\n  const loadOfferCountHandler = async(contract) => {\r\n    const offerCount = await contract.methods.offerCount().call();\r\n    dispatchMarketplaceAction({type: 'LOADOFFERCOUNT', offerCount: offerCount});\r\n    return offerCount;\r\n  };\r\n\r\n  const loadOffersHandler = async(contract, offerCount) => {\r\n    let offers = [];\r\n    for(let i = 0; i < offerCount; i++) {\r\n      const offer = await contract.methods.offers(i + 1).call();\r\n      offers.push(offer);\r\n    }\r\n    offers = offers\r\n    .map(offer => {\r\n      offer.offerId = parseInt(offer.offerId);\r\n      offer.id = parseInt(offer.id);\r\n      offer.price = parseInt(offer.price);\r\n      return offer;\r\n    })\r\n    .filter(offer => offer.fulfilled === false && offer.cancelled === false); \r\n    dispatchMarketplaceAction({type: 'LOADOFFERS', offers: offers});\r\n  };\r\n\r\n  const updateOfferHandler = (offerId) => {\r\n    dispatchMarketplaceAction({type: 'UPDATEOFFER', offerId: offerId});   \r\n  };\r\n\r\n  const addOfferHandler = (offer) => {\r\n    dispatchMarketplaceAction({type: 'ADDOFFER', offer: offer});   \r\n  };\r\n\r\n  const loadUserFundsHandler = async(contract, account) => {\r\n    const userFunds = await contract.methods.userFunds(account).call();\r\n    dispatchMarketplaceAction({type: 'LOADFUNDS', userFunds: userFunds});\r\n    return userFunds;\r\n  };\r\n\r\n  const setMktIsLoadingHandler = (loading) => {\r\n    dispatchMarketplaceAction({type: 'LOADING', loading: loading});\r\n  };\r\n\r\n  const marketplaceContext = {\r\n    contract: MarketplaceState.contract,\r\n    offerCount: MarketplaceState.offerCount,\r\n    offers: MarketplaceState.offers,\r\n    userFunds: MarketplaceState.userFunds,\r\n    mktIsLoading: MarketplaceState.mktIsLoading,\r\n    loadContract: loadContractHandler,\r\n    loadOfferCount: loadOfferCountHandler,\r\n    loadOffers: loadOffersHandler,\r\n    updateOffer: updateOfferHandler,\r\n    addOffer: addOfferHandler,\r\n    loadUserFunds: loadUserFundsHandler,\r\n    setMktIsLoading: setMktIsLoadingHandler\r\n  };\r\n  \r\n  return (\r\n    <MarketplaceContext.Provider value={marketplaceContext}>\r\n      {props.children}\r\n    </MarketplaceContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MarketplaceProvider;"]},"metadata":{},"sourceType":"module"}