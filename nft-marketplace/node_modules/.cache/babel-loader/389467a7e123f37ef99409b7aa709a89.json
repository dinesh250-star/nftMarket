{"ast":null,"code":"import _regeneratorRuntime from \"C:/a/nft-marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/a/nft-marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/a/nft-marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\a\\\\nft-marketplace\\\\src\\\\components\\\\Content\\\\MintNFT\\\\MintForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport Web3Context from \"../../../store/web3-context\";\nimport CollectionContext from \"../../../store/collection-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ipfsClient = require(\"ipfs-http-client\");\n\nvar ipfs = ipfsClient.create({\n  host: \"ipfs.infura.io\",\n  port: 5001,\n  protocol: \"https\"\n});\n\nvar MintForm = function MintForm() {\n  _s();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredName = _useState2[0],\n      setEnteredName = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      descriptionIsValid = _useState4[0],\n      setDescriptionIsValid = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      enteredDescription = _useState6[0],\n      setEnteredDescription = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      nameIsValid = _useState8[0],\n      setNameIsValid = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      capturedFileBuffer = _useState10[0],\n      setCapturedFileBuffer = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      fileIsValid = _useState12[0],\n      setFileIsValid = _useState12[1];\n\n  var web3Ctx = useContext(Web3Context);\n  var collectionCtx = useContext(CollectionContext);\n\n  var enteredNameHandler = function enteredNameHandler(event) {\n    setEnteredName(event.target.value);\n  };\n\n  var enteredDescriptionHandler = function enteredDescriptionHandler(event) {\n    setEnteredDescription(event.target.value);\n  };\n\n  var captureFile = function captureFile(event) {\n    event.preventDefault();\n    var file = event.target.files[0];\n    var reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n\n    reader.onloadend = function () {\n      setCapturedFileBuffer(Buffer(reader.result));\n    };\n  };\n\n  var submissionHandler = function submissionHandler(event) {\n    event.preventDefault();\n    enteredName ? setNameIsValid(true) : setNameIsValid(false);\n    enteredDescription ? setDescriptionIsValid(true) : setDescriptionIsValid(false);\n    capturedFileBuffer ? setFileIsValid(true) : setFileIsValid(false);\n    var formIsValid = enteredName && enteredDescription && capturedFileBuffer; // Upload file to IPFS and push to the blockchain\n\n    var mintNFT = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var a, fileAdded, metadata, metadataAdded;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return window.ethereum.request({\n                  method: \"eth_requestAccounts\"\n                });\n\n              case 2:\n                a = _context.sent;\n                _context.next = 5;\n                return ipfs.add(capturedFileBuffer);\n\n              case 5:\n                fileAdded = _context.sent;\n\n                if (fileAdded) {\n                  _context.next = 9;\n                  break;\n                }\n\n                console.error(\"Something went wrong when updloading the file\");\n                return _context.abrupt(\"return\");\n\n              case 9:\n                metadata = {\n                  title: \"Asset Metadata\",\n                  type: \"object\",\n                  properties: {\n                    name: {\n                      type: \"string\",\n                      description: enteredName\n                    },\n                    description: {\n                      type: \"string\",\n                      description: enteredDescription\n                    },\n                    image: {\n                      type: \"string\",\n                      description: fileAdded.path\n                    },\n                    Minter: {\n                      type: \"string\",\n                      description: a\n                    }\n                  }\n                };\n                _context.next = 12;\n                return ipfs.add(JSON.stringify(metadata));\n\n              case 12:\n                metadataAdded = _context.sent;\n                console.log(\"Image data \".concat(fileAdded.path));\n                console.log(\"Ownership metadata \".concat(metadataAdded.path));\n                alert(\"Store this information, Image Data - \".concat(fileAdded.path, \" and Ownership Metadata \").concat(metadataAdded.path));\n\n                if (metadataAdded) {\n                  _context.next = 19;\n                  break;\n                }\n\n                console.error(\"Something went wrong when updloading the file\");\n                return _context.abrupt(\"return\");\n\n              case 19:\n                collectionCtx.contract.methods.safeMint(metadataAdded.path).send({\n                  from: web3Ctx.account\n                }).on(\"transactionHash\", function (hash) {\n                  collectionCtx.setNftIsLoading(true);\n                }).on(\"error\", function (e) {\n                  window.alert(\"Something went wrong when pushing to the blockchain\");\n                  collectionCtx.setNftIsLoading(false);\n                });\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function mintNFT() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    formIsValid && mintNFT();\n  };\n\n  var nameClass = nameIsValid ? \"form-control\" : \"form-control is-invalid\";\n  var descriptionClass = descriptionIsValid ? \"form-control\" : \"form-control is-invalid\";\n  var fileClass = fileIsValid ? \"form-control\" : \"form-control is-invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center down\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"\".concat(nameClass, \" mb-1\"),\n          placeholder: \"Name\",\n          value: enteredName,\n          onChange: enteredNameHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"\".concat(descriptionClass, \" mb-1\"),\n          placeholder: \"Description\",\n          value: enteredDescription,\n          onChange: enteredDescriptionHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"\".concat(fileClass, \" mb-1\"),\n          onChange: captureFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-lg btn-primary text-white btn-block\",\n      children: \"MINT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MintForm, \"YkJS89qcZvTie1hrCMPa0/km0Wc=\");\n\n_c = MintForm;\nexport default MintForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MintForm\");","map":{"version":3,"sources":["C:/a/nft-marketplace/src/components/Content/MintNFT/MintForm.js"],"names":["useState","useContext","Web3Context","CollectionContext","ipfsClient","require","ipfs","create","host","port","protocol","MintForm","enteredName","setEnteredName","descriptionIsValid","setDescriptionIsValid","enteredDescription","setEnteredDescription","nameIsValid","setNameIsValid","capturedFileBuffer","setCapturedFileBuffer","fileIsValid","setFileIsValid","web3Ctx","collectionCtx","enteredNameHandler","event","target","value","enteredDescriptionHandler","captureFile","preventDefault","file","files","reader","window","FileReader","readAsArrayBuffer","onloadend","Buffer","result","submissionHandler","formIsValid","mintNFT","ethereum","request","method","a","add","fileAdded","console","error","metadata","title","type","properties","name","description","image","path","Minter","JSON","stringify","metadataAdded","log","alert","contract","methods","safeMint","send","from","account","on","hash","setNftIsLoading","e","nameClass","descriptionClass","fileClass"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\r\n\r\nimport Web3Context from \"../../../store/web3-context\";\r\nimport CollectionContext from \"../../../store/collection-context\";\r\n\r\nconst ipfsClient = require(\"ipfs-http-client\");\r\nconst ipfs = ipfsClient.create({\r\n  host: \"ipfs.infura.io\",\r\n  port: 5001,\r\n  protocol: \"https\",\r\n});\r\n\r\nconst MintForm = () => {\r\n  const [enteredName, setEnteredName] = useState(\"\");\r\n  const [descriptionIsValid, setDescriptionIsValid] = useState(true);\r\n\r\n  const [enteredDescription, setEnteredDescription] = useState(\"\");\r\n  const [nameIsValid, setNameIsValid] = useState(true);\r\n\r\n  const [capturedFileBuffer, setCapturedFileBuffer] = useState(null);\r\n  const [fileIsValid, setFileIsValid] = useState(true);\r\n\r\n  const web3Ctx = useContext(Web3Context);\r\n  const collectionCtx = useContext(CollectionContext);\r\n\r\n  const enteredNameHandler = (event) => {\r\n    setEnteredName(event.target.value);\r\n  };\r\n\r\n  const enteredDescriptionHandler = (event) => {\r\n    setEnteredDescription(event.target.value);\r\n  };\r\n\r\n  const captureFile = (event) => {\r\n    event.preventDefault();\r\n\r\n    const file = event.target.files[0];\r\n\r\n    const reader = new window.FileReader();\r\n    reader.readAsArrayBuffer(file);\r\n    reader.onloadend = () => {\r\n      setCapturedFileBuffer(Buffer(reader.result));\r\n    };\r\n  };\r\n\r\n  const submissionHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    enteredName ? setNameIsValid(true) : setNameIsValid(false);\r\n    enteredDescription\r\n      ? setDescriptionIsValid(true)\r\n      : setDescriptionIsValid(false);\r\n    capturedFileBuffer ? setFileIsValid(true) : setFileIsValid(false);\r\n\r\n    const formIsValid = enteredName && enteredDescription && capturedFileBuffer;\r\n\r\n    // Upload file to IPFS and push to the blockchain\r\n    const mintNFT = async () => {\r\n      const a = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n      // Add file to the IPFS\r\n      const fileAdded = await ipfs.add(capturedFileBuffer);\r\n      if (!fileAdded) {\r\n        console.error(\"Something went wrong when updloading the file\");\r\n        return;\r\n      }\r\n\r\n      const metadata = {\r\n        title: \"Asset Metadata\",\r\n        type: \"object\",\r\n        properties: {\r\n          name: {\r\n            type: \"string\",\r\n            description: enteredName,\r\n          },\r\n          description: {\r\n            type: \"string\",\r\n            description: enteredDescription,\r\n          },\r\n          image: {\r\n            type: \"string\",\r\n            description: fileAdded.path,\r\n          },\r\n          Minter: {\r\n            type: \"string\",\r\n            description: a,\r\n          },\r\n        },\r\n      };\r\n\r\n      const metadataAdded = await ipfs.add(JSON.stringify(metadata));\r\n      console.log(`Image data ${fileAdded.path}`);\r\n      console.log(`Ownership metadata ${metadataAdded.path}`);\r\n      alert(\r\n        `Store this information, Image Data - ${fileAdded.path} and Ownership Metadata ${metadataAdded.path}`\r\n      );\r\n\r\n      if (!metadataAdded) {\r\n        console.error(\"Something went wrong when updloading the file\");\r\n        return;\r\n      }\r\n\r\n      collectionCtx.contract.methods\r\n        .safeMint(metadataAdded.path)\r\n        .send({ from: web3Ctx.account })\r\n        .on(\"transactionHash\", (hash) => {\r\n          collectionCtx.setNftIsLoading(true);\r\n        })\r\n        .on(\"error\", (e) => {\r\n          window.alert(\"Something went wrong when pushing to the blockchain\");\r\n          collectionCtx.setNftIsLoading(false);\r\n        });\r\n    };\r\n\r\n    formIsValid && mintNFT();\r\n  };\r\n\r\n  const nameClass = nameIsValid ? \"form-control\" : \"form-control is-invalid\";\r\n  const descriptionClass = descriptionIsValid\r\n    ? \"form-control\"\r\n    : \"form-control is-invalid\";\r\n  const fileClass = fileIsValid ? \"form-control\" : \"form-control is-invalid\";\r\n\r\n  return (\r\n    <form onSubmit={submissionHandler}>\r\n      <div className=\"row justify-content-center down\">\r\n        <div className=\"col-md-2\">\r\n          <input\r\n            type=\"text\"\r\n            className={`${nameClass} mb-1`}\r\n            placeholder=\"Name\"\r\n            value={enteredName}\r\n            onChange={enteredNameHandler}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <input\r\n            type=\"text\"\r\n            className={`${descriptionClass} mb-1`}\r\n            placeholder=\"Description\"\r\n            value={enteredDescription}\r\n            onChange={enteredDescriptionHandler}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <input\r\n            type=\"file\"\r\n            className={`${fileClass} mb-1`}\r\n            onChange={captureFile}\r\n          />\r\n        </div>\r\n      </div>\r\n      <button\r\n        type=\"submit\"\r\n        className=\"btn btn-lg btn-primary text-white btn-block\"\r\n      >\r\n        MINT\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MintForm;\r\n"]},"metadata":{},"sourceType":"module"}