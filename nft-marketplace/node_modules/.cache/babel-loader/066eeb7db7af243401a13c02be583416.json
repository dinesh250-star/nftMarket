{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"C:/a/nft-marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:/a/nft-marketplace/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar configure = require('../lib/configure');\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\n\nmodule.exports = configure(function (api) {\n  /**\n   * @type {KeyAPI[\"info\"]}\n   */\n  var info = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(name) {\n      var options,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              throw new Error('Not implemented');\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function info(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return info;\n});","map":{"version":3,"sources":["C:/a/nft-marketplace/node_modules/ipfs-http-client/src/key/info.js"],"names":["configure","require","module","exports","api","info","name","options","Error"],"mappings":"AAAA;;;;;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;AAEA;AACA;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAAC,UAAAI,GAAG,EAAI;AAChC;AACF;AACA;AACE,MAAMC,IAAI;AAAA,wEAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAaC,cAAAA,OAAb,2DAAuB,EAAvB;AAAA,oBACL,IAAIC,KAAJ,CAAU,iBAAV,CADK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAJH,IAAI;AAAA;AAAA;AAAA,KAAV;;AAIA,SAAOA,IAAP;AACD,CATyB,CAA1B","sourcesContent":["'use strict'\n\nconst configure = require('../lib/configure')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {KeyAPI[\"info\"]}\n   */\n  const info = async (name, options = {}) => {\n    throw new Error('Not implemented')\n  }\n\n  return info\n})\n"]},"metadata":{},"sourceType":"script"}