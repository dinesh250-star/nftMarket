{"ast":null,"code":"var _jsxFileName = \"C:\\\\a\\\\nft-marketplace\\\\src\\\\components\\\\Content\\\\Filtered.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport CollectionContext from \"../../store/collection-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Filtered = function Filtered(props) {\n  _s();\n\n  var collectionCtx = useContext(CollectionContext);\n\n  var filteredData = function filteredData() {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: collectionCtx.collection.filter(function (nft) {\n      return nft.id == props.id;\n    }).map(function (nft) {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: nft.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: nft.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://ipfs.infura.io/ipfs/\".concat(nft.img)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: nft.owner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Filtered, \"pP49kZfxXidiPJVbjeXrXhalSXw=\");\n\n_c = Filtered;\nexport default Filtered;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filtered\");","map":{"version":3,"sources":["C:/a/nft-marketplace/src/components/Content/Filtered.js"],"names":["CollectionContext","Filtered","props","collectionCtx","useContext","filteredData","collection","filter","nft","id","map","title","img","owner"],"mappings":";;;;AAAA,OAAOA,iBAAP,MAA8B,gCAA9B;;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA;;AAC1B,MAAMC,aAAa,GAAGC,UAAU,CAACJ,iBAAD,CAAhC;;AACA,MAAMK,YAAY,GAAG,SAAfA,YAAe,GAAM,CAAE,CAA7B;;AACA,sBACE;AAAA,cACGF,aAAa,CAACG,UAAd,CACEC,MADF,CACS,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,EAAJ,IAAUP,KAAK,CAACO,EAAzB;AAAA,KADT,EAEEC,GAFF,CAEM,UAACF,GAAD;AAAA,0BACH;AAAA,gCACE;AAAA,oBAAKA,GAAG,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA,oBAAKD,GAAG,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE;AAAK,UAAA,GAAG,wCAAiCH,GAAG,CAACI,GAArC;AAAR;AAAA;AAAA;AAAA;AAAA,iBAHF,eAIE;AAAA,oBAAKJ,GAAG,CAACK;AAAT;AAAA;AAAA;AAAA;AAAA,iBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,eADG;AAAA,KAFN;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CAjBD;;GAAMZ,Q;;KAAAA,Q;AAkBN,eAAeA,QAAf","sourcesContent":["import CollectionContext from \"../../store/collection-context\";\r\nconst Filtered = (props) => {\r\n  const collectionCtx = useContext(CollectionContext);\r\n  const filteredData = () => {};\r\n  return (\r\n    <div>\r\n      {collectionCtx.collection\r\n        .filter((nft) => nft.id == props.id)\r\n        .map((nft) => (\r\n          <ul>\r\n            <li>{nft.id}</li>\r\n            <li>{nft.title}</li>\r\n            <img src={`https://ipfs.infura.io/ipfs/${nft.img}`} />\r\n            <li>{nft.owner}</li>\r\n          </ul>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Filtered;\r\n"]},"metadata":{},"sourceType":"module"}